import{_ as s,c as n,o as a,a as l}from"./app.dbe68515.js";const u=JSON.parse('{"title":"$nextTick","description":"","frontmatter":{},"headers":[{"level":2,"title":"Promises","slug":"promises","link":"#promises","children":[]}],"relativePath":"guide/magics/nextTick.md","lastUpdated":1672311232000}'),e={name:"guide/magics/nextTick.md"},o=l(`<h1 id="nexttick" tabindex="-1">$nextTick <a class="header-anchor" href="#nexttick" aria-hidden="true">#</a></h1><p><code>$nextTick</code> 是一个运行你在 Alpine 做出响应式 DOM 更新后，执行一个给定表达式的指令。</p><p>这在需要在完成数据更新后用 DOM 状态做交互时非常有用。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">x-data</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ title: &#39;Hello&#39; }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">           title = &#39;Hello World!&#39;;</span></span>
<span class="line"><span style="color:#C3E88D;">           $nextTick(() =&gt; console.log($el.innerText) );</span></span>
<span class="line"><span style="color:#C3E88D;">    </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#C792EA;">x-text</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">  &gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><p>在上面的示例中，点击按钮不是将 <code>Hello</code> 输出到控制台，而是 <code>Hello World!</code> 将被记录，因为 <code>$nextTick</code> 用于等待 Alpine 完成更新 DOM。</p><h2 id="promises" tabindex="-1"><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noreferrer">Promises</a> <a class="header-anchor" href="#promises" aria-hidden="true">#</a></h2><p><code>$nextTick</code> 会返回一个 promise，允许使用 <code>$nextTick</code> 来暂停异步函数，直到挂起的 dom 更新之后。像这样使用时，<code>$nextTick</code> 不需要传递参数。</p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">x-data</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">{ title: &#39;Hello&#39; }</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">button</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">@click</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#C3E88D;">            title = &#39;Hello World!&#39;;</span></span>
<span class="line"><span style="color:#C3E88D;">            await $nextTick();</span></span>
<span class="line"><span style="color:#C3E88D;">            console.log($el.innerText);</span></span>
<span class="line"><span style="color:#C3E88D;">        </span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">x-text</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">title</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    &gt;&lt;/</span><span style="color:#F07178;">button</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">div</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div>`,8),p=[o];function t(c,r,i,D,F,y){return a(),n("div",null,p)}const h=s(e,[["render",t]]);export{u as __pageData,h as default};
